{"version":3,"file":"rock-paper-scissor.js","names":["RockPaperScissors","selector","tie","p1","p2","evt","btn","target","move","dataset","console","log","player1move","player2move","player2","randomGuess","MOVES","player1score","player2score","latestOutcome","pickWinner","updateGamestatus","updateScore","addPoints","p1m","p2m","player1Guess","gameBoardEl","querySelector","player2Guess","innerText","outcome","p1Score","scoreBoardEl","p2Score","winner","OUTCOMES","textContent","message","CustomEvent","detail","document","dispatchEvent","setup","btns","querySelectorAll","forEach","addEventListener","handleMove","player1","Player","resultsEl","StatusMessage","Game"],"sources":["rock-paper-scissor.js"],"sourcesContent":["class RockPaperScissors extends Game {\r\n\r\n    MOVES = ['rock', 'paper' , \"scissors\"]\r\n    OUTCOMES = {\r\n        tie: 'tied', \r\n        p1: 'Player 1 won',\r\n        p2: 'Player 2 won',\r\n    }\r\n    constructor(selector){\r\n        super(selector)\r\n\r\n        this.setup()\r\n    }\r\n    \r\n    setup(){\r\n       const btns = this.gameBoardEl.querySelectorAll(\".move button\")\r\n       btns.forEach((btn) => {\r\n           btn.addEventListener(\"click\" , this.handleMove)\r\n        })\r\n\r\n        this.player1 = new Player(\"me\")\r\n        this.player2 = new Player(\"computer\")\r\n\r\n        const resultsEl = this.gameBoardEl.querySelector('#round-result')\r\n        new StatusMessage(resultsEl)\r\n\r\n        // const scoreboardEl = this.scoreBoardEl.querySelector('scoreboard')\r\n        // new StatusMessage(resultsEl)\r\n    }\r\n\r\n    handleMove = (evt) => {\r\n        const btn = evt.target \r\n        const move = btn.dataset.move\r\n        console.log(\"player1 guess:\", move)\r\n\r\n        const player1move = move;\r\n        const player2move = this.player2.randomGuess(this.MOVES)\r\n\r\n        const player1score = 0\r\n        const player2score = 0\r\n\r\n        this.latestOutcome = this.pickWinner(player1move, player2move)\r\n        this.updateGamestatus()\r\n\r\n        this.updateScore = this.addPoints(player1score, player2score)\r\n        // this.addPoints()\r\n    }\r\n    \r\n    pickWinner = (p1m, p2m) => {\r\n\r\n        const player1Guess = this.gameBoardEl.querySelector('.player-one')\r\n        const player2Guess = this.gameBoardEl.querySelector('.player-two')\r\n        player1Guess.innerText = \"player one chose: \" + p1m\r\n        player2Guess.innerText = \"player two chose: \" + p2m\r\n\r\n        console.log('player guess:', p1m, p2m)\r\n        let outcome = ''\r\n\r\n        if (p1m == p2m){ //tie\r\n            outcome = 'tie'\r\n        } else {\r\n            if (p1m == 'rock') {\r\n                if (p2m =='paper') {\r\n                    outcome = 'p2'\r\n                } else {\r\n                    outcome = 'p1'\r\n                }\r\n            } else if (p1m == 'paper') {\r\n                if (p2m == 'rock'){\r\n                    outcome = 'p1'\r\n                } else {\r\n                    outcome = 'p2'\r\n                }\r\n            } else if (p1m == \"scissors\") {\r\n                if (p2m =='rock'){\r\n                    outcome = 'p2'\r\n                } else {\r\n                    outcome = 'p1'\r\n                }\r\n            }\r\n        }\r\n       \r\n        return outcome\r\n    }\r\n\r\n    addPoints = () => { \r\n        //select player 1 score \r\n        //select player 2 score\r\n        //check who won the round\r\n        //if player 1 wins, add point for player 1 win update player 1 score \r\n        //if player 2 wins, add point for player 2 win update player 2 score \r\n        //tie = no points \r\n        //when the game reaches 5 points = game over \r\n        //game over = resets game\r\n        const p1Score = this.scoreBoardEl.querySelector('#player1 .score')\r\n        console.log(p1Score)\r\n        const p2Score = this.scoreBoardEl.querySelector('#player2 .score')\r\n        console.log(p2Score)\r\n\r\n        const winner = this.OUTCOMES[this.latestOutcome]\r\n        console.log(winner)\r\n        if (winner == \"tie\") {\r\n            //do nothing\r\n        } else {\r\n            if (winner == \"Player 1 won\") {\r\n                p1Score.textContent++\r\n            } else if (winner == \"Player 2 won\") {\r\n                p2Score.textContent++\r\n            } \r\n        }\r\n        return;  \r\n    }\r\n\r\n    // gameOver = () => {\r\n\r\n    // }\r\n\r\n\r\n\r\n    updateGamestatus = () => {\r\n        // const score = \r\n        const message = this.OUTCOMES[this.latestOutcome]\r\n        const evt = new CustomEvent('game-status', {detail: { message: message }})\r\n        document.dispatchEvent(evt)      \r\n    }\r\n}"],"mappings":"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"}